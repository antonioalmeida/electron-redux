(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{64:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return d}));var n=r(2),o=r(6),a=(r(0),r(92)),i={id:"overview",title:"Overview",sidebar_label:"Overview",slug:"/"},c={unversionedId:"overview",id:"overview",isDocsHomePage:!1,title:"Overview",description:"Motivation",source:"@site/docs/overview.md",slug:"/",permalink:"/electron-redux/docs/",editUrl:"https://github.com/klarna/electron-redux/edit/master/docs/website/docs/overview.md",version:"current",sidebar_label:"Overview",sidebar:"someSidebar",next:{title:"Other Page",permalink:"/electron-redux/docs/other-page"}},s=[{value:"Motivation",id:"motivation",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[{value:"Main Store",id:"main-store",children:[]},{value:"Renderer Store",id:"renderer-store",children:[]}]}],l={rightToc:s};function d(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"motivation"},"Motivation"),Object(a.b)("p",null,"In Electron, the (",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/electron/electron/blob/master/docs/tutorial/quick-start.md#main-process"}),"main")," and ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/electron/electron/blob/master/docs/tutorial/quick-start.md#renderer-process"}),"renderer"),") processes are completely isolated, and the only mode of communication is through ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/electron/electron/blob/master/docs/api/ipc-main.md"}),"IPC"),". When using Redux with Electron, this poses a couple of problems:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Where do you keep the state?"),Object(a.b)("li",{parentName:"ul"},"How do you keep the state in sync across processes?")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"electron-redux")," offers an easy to use solution. The redux store on the main process becomes the single source of truth, and stores in the renderer processes become mere proxies:"),Object(a.b)("p",null,Object(a.b)("img",Object(n.a)({parentName:"p"},{src:"https://cloud.githubusercontent.com/assets/307162/20675737/385ce59e-b585-11e6-947e-3867e77c783d.png",alt:"electron-redux basic"}))),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"TODO: add minimum Node version")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# npm \n$ npm install electron-redux\n\n# yarn \n$ yarn add electron-redux\n")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"electron-redux")," comes a easy to use redux middleware that is applied to both main and renderer stores."),Object(a.b)("h3",{id:"main-store"},"Main Store"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"import { forwardToRenderer, triggerAlias, replayActionMain } from 'electron-redux';\n\nconst todoApp = combineReducers(reducers);\n\nconst store = createStore(\n  todoApp,\n  initialState, // optional\n  applyMiddleware(\n    triggerAlias, // optional, see below\n    ...otherMiddleware,\n    forwardToRenderer, // IMPORTANT! This goes last\n  ),\n);\n\nreplayActionMain(store);\n")),Object(a.b)("h3",{id:"renderer-store"},"Renderer Store"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"import { forwardToMain, replayActionRenderer, getInitialStateRenderer } from 'electron-redux';\n\nconst todoApp = combineReducers(reducers);\nconst initialState = getInitialStateRenderer();\n\nconst store = createStore(\n  todoApp,\n  initialState,\n  applyMiddleware(\n    forwardToMain, // IMPORTANT! This goes first\n    ...otherMiddleware,\n  ),\n);\n\nreplayActionRenderer(store);\n")))}d.isMDXComponent=!0}}]);